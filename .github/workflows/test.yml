name: Run Code Tests

on:
  push:
    paths:
      - "solutions/**"
  pull_request:
    paths:
      - "solutions/**"

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Detect Changed Files
        id: detect
        run: |
          BEFORE_COMMIT="${{ github.event.before }}"
          if [ -z "$BEFORE_COMMIT" ] || ! git cat-file -e "$BEFORE_COMMIT"^{commit}; then
            BEFORE_COMMIT=$(git rev-parse HEAD~1)
          fi

          CHANGED_FILES=$(git diff --name-only "$BEFORE_COMMIT" HEAD | grep '^solutions/')
          echo "Changed files: $CHANGED_FILES"

          if [ -z "$CHANGED_FILES" ]; then
            echo "No solution file changed."
            exit 1
          fi

          echo "CHANGED_FILES=$(echo $CHANGED_FILES)" >> $GITHUB_ENV

      - name: Determine Language
        run: |
          for file in $CHANGED_FILES; do
            case "$file" in
              *.c) echo "LANGUAGE=C" >> $GITHUB_ENV ;;
              *.cpp) echo "LANGUAGE=CPP" >> $GITHUB_ENV ;;
              *.py) echo "LANGUAGE=PYTHON" >> $GITHUB_ENV ;;
              *.java) echo "LANGUAGE=JAVA" >> $GITHUB_ENV ;;
            esac
          done

      - name: Check for Unfilled Template
        run: |
          TEMPLATE_STRINGS="TODO pass 'Your code here'"
          for str in $TEMPLATE_STRINGS; do
            if grep -i -q "$str" $CHANGED_FILES; then
              echo "❌ Detected unfilled template string: $str"
              exit 1
            fi
          done
          echo "✅ No unfilled template code detected."

      - name: Install Dependencies
        run: |
          sudo apt update
          if [ "$LANGUAGE" = "C" ]; then sudo apt install -y gcc; fi
          if [ "$LANGUAGE" = "CPP" ]; then sudo apt install -y g++; fi
          if [ "$LANGUAGE" = "PYTHON" ]; then sudo apt install -y python3; fi
          if [ "$LANGUAGE" = "JAVA" ]; then sudo apt install -y openjdk-17-jdk; fi

      - name: Run C Tests
        if: env.LANGUAGE == 'C'
        run: |
          gcc solutions/solution.c tests/test.c -o test_runner
          ./test_runner | tee test_results.log

      - name: Run C++ Tests
        if: env.LANGUAGE == 'CPP'
        run: |
          g++ solutions/solution.cpp tests/test.cpp -o test_runner_cpp
          ./test_runner_cpp | tee test_results.log

      - name: Run Python Tests
        if: env.LANGUAGE == 'PYTHON'
        run: |
          python3 tests/test.py | tee test_results.log

      - name: Run Java Tests
        if: env.LANGUAGE == 'JAVA'
        run: |
          javac -d . solutions/*.java tests/*.java
          java tests.Test | tee test_results.log

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test_results.log
