name: Run Code Tests

on:
  push:
    paths:
      - "solutions/**"
  pull_request:
    paths:
      - "tests/**"

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Ensure previous commit is available

      - name: Detect Changed Files
        id: changed-files
        run: |
          BEFORE_COMMIT="${{ github.event.before }}"
          if [ -z "$BEFORE_COMMIT" ] || ! git cat-file -e "$BEFORE_COMMIT"^{commit}; then
            BEFORE_COMMIT=$(git rev-parse HEAD~1)  # Use last commit as fallback
          fi
          
          CHANGED_FILES=$(git diff --name-only "$BEFORE_COMMIT" HEAD | grep '^solutions/' || true)
          echo "Detected changed files: $CHANGED_FILES"
          
          if [ -z "$CHANGED_FILES" ]; then
            echo "No file changes detected. Skipping tests."
            exit 0
          fi

          echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV

      - name: Determine File Type
        run: |
          for file in $CHANGED_FILES; do
            case "$file" in
              *.c) echo "language_C=true" >> $GITHUB_ENV ;;
              *.cpp) echo "language_CPP=true" >> $GITHUB_ENV ;;
              *.py) echo "language_Python=true" >> $GITHUB_ENV ;;
              *.java) echo "language_Java=true" >> $GITHUB_ENV ;;
            esac
          done

      - name: Install Dependencies
        run: |
          sudo apt update
          [[ "$language_C" == "true" ]] && sudo apt install -y gcc
          [[ "$language_CPP" == "true" ]] && sudo apt install -y g++
          [[ "$language_Python" == "true" ]] && sudo apt install -y python3
          [[ "$language_Java" == "true" ]] && sudo apt install -y openjdk-17-jdk

      - name: Compile and Run C Tests
        if: env.language_C == 'true'
        run: |
          gcc tests/test.c -o test_runner
          echo "Running C Test Cases..."
          ./test_runner | tee test_results_C.log

      - name: Compile and Run C++ Tests
        if: env.language_CPP == 'true'
        run: |
          g++ tests/test.cpp -o test_runner_cpp
          echo "Running C++ Test Cases..."
          ./test_runner_cpp | tee test_results_CPP.log

      - name: Run Python Tests
        if: env.language_Python == 'true'
        run: |
          echo "Running Python Test Cases..."
          python3 tests/test.py | tee test_results_Python.log

      - name: Compile and Run Java Tests
        if: env.language_Java == 'true'
        run: |
          javac tests/Test.java
          echo "Running Java Test Cases..."
          java -cp tests Test | tee test_results_Java.log

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test_results_*.log
